package amaneko.ml_and_fx.controller;

import java.net.URL;
import java.util.List;
import java.util.ResourceBundle;

import amaneko.ml_and_fx.model.Movie;
import amaneko.ml_and_fx.model.User;
import amaneko.ml_and_fx.model.UserPreferences;
import amaneko.ml_and_fx.model.UserRating;
import amaneko.ml_and_fx.service.SimpleMovieRecommendationService;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.ListView;
import javafx.scene.control.ProgressIndicator;
import javafx.scene.control.TextArea;
import javafx.scene.control.TextField;
import javafx.scene.control.ToggleButton;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;

// –ì–ª–∞–≤–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è —ç–∫—Ä–∞–Ω–∞ —Å —Ñ–∏–ª—å–º–∞–º–∏
public class MainController implements Initializable {
    
    // –≠–ª–µ–º–µ–Ω—Ç—ã –∏–∑ FXML —Ñ–∞–π–ª–∞
    @FXML private TextField searchField;
    @FXML private Button searchButton;
    @FXML private Button recommendButton;
    @FXML private Button clearRecommendationsButton;
    @FXML private Button preferencesButton;
    @FXML private Button rateMovieButton;
    @FXML private Button markWatchedButton;
    @FXML private Button logoutButton;
    @FXML private Button favoritesButton;
    @FXML private ListView<Movie> movieListView;
    // @FXML private ComboBox<String> movieCategoryCombo; // FXID NOT FOUND
    @FXML private TextArea movieDetailsArea;
    @FXML private ImageView moviePosterView;
    @FXML private ProgressIndicator loadingIndicator;
    @FXML private Label userInfoLabel;
    @FXML private Label statusLabel;
    @FXML private ToggleButton favoriteToggleButton;
    
    // –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏
    private SimpleMovieRecommendationService recommendationService;
    private ObservableList<Movie> movieList;
    private User currentUser;
    private MovieRecommendationApp app;
    private Movie lastSelectedMovie = null;
    
    // –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∫–æ–≥–¥–∞ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è —ç–∫—Ä–∞–Ω
    @Override
    public void initialize(URL url, ResourceBundle resourceBundle) {
        // –°–µ—Ä–≤–∏—Å –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ setApp()
        
        // –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–ª—è —Ñ–∏–ª—å–º–æ–≤
        movieList = FXCollections.observableArrayList();
        movieListView.setItems(movieList);
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–æ–º–±–æ-–±–æ–∫—Å –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        // movieCategoryCombo.setItems(FXCollections.observableArrayList( // FXID NOT FOUND
        //     "–í—Å–µ —Ñ–∏–ª—å–º—ã", "–ü–æ–∏—Å–∫", "–û–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏", 
        //     "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏", "–î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞", "–û—Ü–µ–Ω–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å–º—ã"
        // ));
        // movieCategoryCombo.setValue("–í—Å–µ —Ñ–∏–ª—å–º—ã"); // FXID NOT FOUND
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        // movieCategoryCombo.setOnAction(event -> handleCategoryChange()); // FXID NOT FOUND
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–æ–º–±–æ-–±–æ–∫—Å —Ç–∏–ø–æ–≤ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
        // recommendationTypeCombo.setItems(FXCollections.observableArrayList(
        //     "–û–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏", "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ", "–ü–µ—Ä–µ—Å–º–æ—Ç—Ä–µ—Ç—å"
        // ));
        // recommendationTypeCombo.setValue("–û–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏");
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–ª–∏–∫–∞–µ—Ç –Ω–∞ —Ñ–∏–ª—å–º
        movieListView.setOnMouseClicked(event -> {
            Movie selectedMovie = movieListView.getSelectionModel().getSelectedItem();
            if (selectedMovie != null) {
                showMovieDetails(selectedMovie);
                updateFavoriteToggle(selectedMovie);
            }
        });
        
        // –ü—Ä—è—á–µ–º –∑–∞–≥—Ä—É–∑–∫—É
        loadingIndicator.setVisible(false);
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    public void setCurrentUser(User user) {
        this.currentUser = user;
        if (user != null) {
            userInfoLabel.setText("üë§ " + user.getUsername());
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–µ—Ä–≤–∏—Å–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
            if (recommendationService != null) {
                recommendationService.setCurrentUser(user.getId());
            }
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
            String welcomeMessage = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, " + user.getUsername() + "!\n\n";
            welcomeMessage = welcomeMessage + "üîç –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–∏—Å–∫ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤\n";
            welcomeMessage = welcomeMessage + "‚≠ê –ü–æ–ª—É—á–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏\n";
            welcomeMessage = welcomeMessage + "üé¨ –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–π—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∏–ª—å–º–∞—Ö\n\n";
            welcomeMessage = welcomeMessage + "–£–¥–∞—á–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞!";
            movieDetailsArea.setText(welcomeMessage);
            statusLabel.setText("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: " + user.getUsername());
        }
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    public void setApp(MovieRecommendationApp app) {
        this.app = app;
        // –ü–æ–ª—É—á–∞–µ–º –æ–±—â–∏–π —Å–µ—Ä–≤–∏—Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
        this.recommendationService = app.getRecommendationService();
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –≤—ã—Ö–æ–¥–∞
    @FXML
    private void handleLogout() {
        if (app != null) {
            try {
                // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                currentUser = null;
                // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —ç–∫—Ä–∞–Ω—É –≤—Ö–æ–¥–∞
                app.showLoginScreen();
            } catch (Exception e) {
                System.err.println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ: " + e.getMessage());
                Alert alert = new Alert(Alert.AlertType.ERROR);
                alert.setTitle("–û—à–∏–±–∫–∞");
                alert.setHeaderText(null);
                alert.setContentText("–ù–µ —É–¥–∞–ª–æ—Å—å –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ —ç–∫—Ä–∞–Ω—É –≤—Ö–æ–¥–∞: " + e.getMessage());
                alert.showAndWait();
            }
        }
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ø–æ–∏—Å–∫–∞
    @FXML
    private void handleSearch() {
        String searchTerm = searchField.getText();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤–≤–µ–ª–∏ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞
        if (searchTerm == null || searchTerm.isEmpty()) {
            Alert alert = new Alert(Alert.AlertType.WARNING);
            alert.setTitle("–û—à–∏–±–∫–∞");
            alert.setHeaderText(null);
            alert.setContentText("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞");
            alert.showAndWait();
            return;
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –∏–¥–µ—Ç –ø–æ–∏—Å–∫
        loadingIndicator.setVisible(true);
        statusLabel.setText("–ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–æ–≤...");
        
        // –ò—â–µ–º —Ñ–∏–ª—å–º—ã
        List<Movie> foundMovies = recommendationService.searchMovies(searchTerm, 20);
        
        // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–π —Å–ø–∏—Å–æ–∫ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Ñ–∏–ª—å–º—ã
        movieList.clear();
        for (Movie movie : foundMovies) {
            movieList.add(movie);
        }
        
        // –ü—Ä—è—á–µ–º –∑–∞–≥—Ä—É–∑–∫—É
        loadingIndicator.setVisible(false);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if (foundMovies.isEmpty()) {
            statusLabel.setText("–§–∏–ª—å–º—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã");
        } else {
            statusLabel.setText("–ù–∞–π–¥–µ–Ω–æ " + foundMovies.size() + " —Ñ–∏–ª—å–º–æ–≤");
        }
    }
    
    // –°—á–µ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–æ–≤ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –≤ —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏
    private int recommendationRequestCount = 0;
    
    // –û–±—ä–µ–¥–∏–Ω—ë–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
    @FXML
    private void handleRecommendButton() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ª–æ–≥–∏–Ω–∏–ª—Å—è
        if (currentUser == null) {
            showError("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω");
            return;
        }
        
        // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–æ–≤ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
        recommendationRequestCount++;
        
        // –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
        int count = 10;
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –∏–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∞
        loadingIndicator.setVisible(true);
        
        List<Movie> recommendations;
        String statusMessage;
        
        if (recommendationRequestCount == 1) {
            System.out.println("üîÑ –ü–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π - –ø–æ–ª—É—á–∞–µ–º —Å–≤–µ–∂–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏");
            // –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—Ä–æ—Å–µ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –∫—ç—à–∏, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å —á–∏—Å—Ç–æ–≥–æ –ª–∏—Å—Ç–∞
            recommendationService.clearAllUserCaches(currentUser.getId());
            statusLabel.setText("–ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π...");
        } else {
            System.out.println("üîÑ –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π (" + recommendationRequestCount + ") - –∏—â–µ–º –Ω–æ–≤—ã–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ");
            statusLabel.setText("–ü–æ–∏—Å–∫ –Ω–æ–≤—ã—Ö —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π...");
        }
        
        // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ (—Ñ—É–Ω–∫—Ü–∏—è —Å–∞–º–∞ –ø–æ–∑–∞–±–æ—Ç–∏—Ç—Å—è –æ –≤—ã–¥–∞—á–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö)
        recommendations = recommendationService.getRecommendationsForUser(currentUser.getId(), count);
        
        // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–π —Å–ø–∏—Å–æ–∫ –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        movieList.clear();
        movieList.addAll(recommendations);
        
        // –ü—Ä—è—á–µ–º –∑–∞–≥—Ä—É–∑–∫—É
        loadingIndicator.setVisible(false);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if (recommendations.isEmpty()) {
            statusLabel.setText("–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã");
        } else {
            if (recommendationRequestCount == 1) {
                statusMessage = "–ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π";
            } else {
                statusMessage = "–Ω–æ–≤—ã—Ö —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π";
            }
            statusLabel.setText("–ü–æ–ª—É—á–µ–Ω–æ " + recommendations.size() + " " + statusMessage);
        }
        
        System.out.println("‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ " + recommendations.size() + " –Ω–æ–≤—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π");
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –æ—á–∏—Å—Ç–∫–∏ –ø–æ–∫–∞–∑–∞–Ω–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
    @FXML
    private void handleClearRecommendations() {
        if (currentUser == null) {
            showError("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω");
            return;
        }
        
        System.out.println("üîÑ –ü–æ–ª–Ω–æ—Å—Ç—å—é —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –∫—ç—à–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: " + currentUser.getUsername());
        
        // –ü–æ–ª–Ω–æ—Å—Ç—å—é —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –∫—ç—à–∏
        recommendationService.clearAllUserCaches(currentUser.getId());
        
        // –¢–∞–∫–∂–µ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –∂–∞–Ω—Ä–æ–≤ –≤ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        UserPreferences userPreferences = recommendationService.getUserPreferences(currentUser.getId());
        if (userPreferences != null) {
            System.out.println("üé≠ –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –∂–∞–Ω—Ä–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
            userPreferences.getPreferredGenres().clear();
            recommendationService.saveUserPreferences(userPreferences);
        }
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–æ–≤ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
        recommendationRequestCount = 0;
        
        // –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫
        movieList.clear();
        movieDetailsArea.clear();
        moviePosterView.setImage(null);
        
        statusLabel.setText("–ö—ç—à —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –∏ —Ñ–∏–ª—å—Ç—Ä—ã –∂–∞–Ω—Ä–æ–≤ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–µ–Ω—ã. –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å —Å —á–∏—Å—Ç–æ–≥–æ –ª–∏—Å—Ç–∞!");
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π
    @FXML
    private void handlePreferences() {
        if (app != null) {
            try {
                app.showPreferencesScreen(currentUser);
            } catch (Exception e) {
                showError("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: " + e.getMessage());
            }
        }
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –æ—Ü–µ–Ω–∫–∏ —Ñ–∏–ª—å–º–∞
    @FXML
    private void handleRateMovie() {
        System.out.println("üé¨ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –æ—Ü–µ–Ω–∫–∏ —Ñ–∏–ª—å–º–∞...");
        
        Movie selectedMovie = movieListView.getSelectionModel().getSelectedItem();
        System.out.println("üìΩÔ∏è –í—ã–±—Ä–∞–Ω–Ω—ã–π —Ñ–∏–ª—å–º: " + (selectedMovie != null ? selectedMovie.getTitle() : "null"));
        
        if (selectedMovie == null) {
            System.out.println("‚ùå –§–∏–ª—å–º –Ω–µ –≤—ã–±—Ä–∞–Ω");
            showError("–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–ª—å–º –¥–ª—è –æ—Ü–µ–Ω–∫–∏");
            return;
        }
        
        System.out.println("üë§ –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: " + (currentUser != null ? currentUser.getUsername() : "null"));
        if (currentUser == null) {
            System.out.println("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω");
            showError("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω");
            return;
        }
        
        System.out.println("üöÄ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: " + (app != null ? "–≥–æ—Ç–æ–≤–æ" : "null"));
        if (app != null) {
            try {
                System.out.println("üìä –û—Ç–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –æ—Ü–µ–Ω–∫–∏...");
                app.showRatingDialog(selectedMovie, currentUser);
                System.out.println("‚úÖ –î–∏–∞–ª–æ–≥ –æ—Ü–µ–Ω–∫–∏ –∑–∞–∫—Ä—ã—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–∏–ª—å–º–∞");
                
                // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∏–ª—å–º —Å –Ω–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                Movie updatedMovie = recommendationService.loadMovieWithUserData(selectedMovie.getId(), currentUser.getId());
                if (updatedMovie != null) {
                    // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∏–ª—å–º –≤ —Å–ø–∏—Å–∫–µ
                    int index = movieList.indexOf(selectedMovie);
                    if (index >= 0) {
                        movieList.set(index, updatedMovie);
                        movieListView.getSelectionModel().select(index);
                        System.out.println("üîÑ –§–∏–ª—å–º –≤ —Å–ø–∏—Å–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω —Å –Ω–æ–≤–æ–π –æ—Ü–µ–Ω–∫–æ–π");
                    }
                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–µ—Ç–∞–ª–∏
                    showMovieDetails(updatedMovie);
                } else {
                    // Fallback - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –¥–µ—Ç–∞–ª–∏
                    showMovieDetails(selectedMovie);
                }
            } catch (Exception e) {
                System.err.println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –¥–∏–∞–ª–æ–≥–∞: " + e.getMessage());
                e.printStackTrace();
                showError("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –¥–∏–∞–ª–æ–≥ –æ—Ü–µ–Ω–∫–∏: " + e.getMessage());
            }
        } else {
            System.out.println("‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ");
            showError("–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –≥–æ—Ç–æ–≤–æ");
        }
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω–æ–µ"
    @FXML
    private void handleMarkWatched() {
        Movie selectedMovie = movieListView.getSelectionModel().getSelectedItem();
        if (selectedMovie == null) {
            showError("–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–ª—å–º –¥–ª—è –æ—Ç–º–µ—Ç–∫–∏ –∫–∞–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω–æ–≥–æ");
            return;
        }
        
        if (currentUser == null) {
            showError("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω");
            return;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ—Ç–º–µ—á–µ–Ω –ª–∏ —Ñ–∏–ª—å–º —É–∂–µ –∫–∞–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–π
        if (recommendationService.isMovieWatchedByUser(currentUser.getId(), selectedMovie.getId())) {
            statusLabel.setText("–§–∏–ª—å–º —É–∂–µ –æ—Ç–º–µ—á–µ–Ω –∫–∞–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–π");
            return;
        }
        
        // –û—Ç–º–µ—á–∞–µ–º —Ñ–∏–ª—å–º –∫–∞–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–π
        recommendationService.recordMovieView(currentUser.getId(), selectedMovie.getId());
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∏–ª—å–º —Å –Ω–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        Movie updatedMovie = recommendationService.loadMovieWithUserData(selectedMovie.getId(), currentUser.getId());
        if (updatedMovie != null) {
            // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∏–ª—å–º –≤ —Å–ø–∏—Å–∫–µ
            int index = movieList.indexOf(selectedMovie);
            if (index >= 0) {
                movieList.set(index, updatedMovie);
                movieListView.getSelectionModel().select(index);
            }
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–µ—Ç–∞–ª–∏
            showMovieDetails(updatedMovie);
        }
        
        statusLabel.setText("‚úÖ –§–∏–ª—å–º \"" + selectedMovie.getTitle() + "\" –æ—Ç–º–µ—á–µ–Ω –∫–∞–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–π");
        System.out.println("‚úÖ –§–∏–ª—å–º " + selectedMovie.getTitle() + " –æ—Ç–º–µ—á–µ–Ω –∫–∞–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–π");
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ –∫–æ–º–±–æ-–±–æ–∫—Å–µ
    private void handleCategoryChange() {
        // String selectedCategory = movieCategoryCombo.getValue(); // FXID NOT FOUND
        // if (selectedCategory == null) return; // FXID NOT FOUND

        // loadingIndicator.setVisible(true); // FXID NOT FOUND
        // statusLabel.setText("–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∏–ª—å–º–æ–≤..."); // FXID NOT FOUND

        // movieList.clear(); // FXID NOT FOUND
        // List<Movie> newMovies = null; // FXID NOT FOUND

        // switch (selectedCategory) { // FXID NOT FOUND
        //     case "–í—Å–µ —Ñ–∏–ª—å–º—ã": // FXID NOT FOUND
        //         newMovies = recommendationService.getAllMovies(50); // FXID NOT FOUND
        //         break; // FXID NOT FOUND
        //     case "–ü–æ–∏—Å–∫": // FXID NOT FOUND
        //         // –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
        //         // –ò–ª–∏ –º–æ–∂–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤–≤–µ—Å—Ç–∏ –∑–∞–ø—Ä–æ—Å
        //         statusLabel.setText("–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–∏—Å–∫–∞"); // FXID NOT FOUND
        //         break; // FXID NOT FOUND
        //     case "–û–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏": // FXID NOT FOUND
        //         newMovies = recommendationService.getGeneralRecommendations(currentUser != null ? currentUser.getId() : -1, 20); // FXID NOT FOUND
        //         break; // FXID NOT FOUND
        //     case "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏": // FXID NOT FOUND
        //         if (currentUser != null) { // FXID NOT FOUND
        //             newMovies = recommendationService.getPersonalizedRecommendations(currentUser.getId(), 20); // FXID NOT FOUND
        //         } else { // FXID NOT FOUND
        //             showError("–ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π"); // FXID NOT FOUND
        //         } // FXID NOT FOUND
        //         break; // FXID NOT FOUND
        //     case "–î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞": // FXID NOT FOUND
        //         if (currentUser != null) { // FXID NOT FOUND
        //             newMovies = recommendationService.getRewatchRecommendations(currentUser.getId(), 20); // FXID NOT FOUND
        //         } else { // FXID NOT FOUND
        //             showError("–ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å –¥–ª—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –∫ –ø–µ—Ä–µ—Å–º–æ—Ç—Ä—É"); // FXID NOT FOUND
        //         } // FXID NOT FOUND
        //         break; // FXID NOT FOUND
        //     case "–û—Ü–µ–Ω–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å–º—ã": // FXID NOT FOUND
        //         if (currentUser != null) { // FXID NOT FOUND
        //             newMovies = recommendationService.getRatedMovies(currentUser.getId()); // FXID NOT FOUND
        //         } else { // FXID NOT FOUND
        //             showError("–ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Ü–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤"); // FXID NOT FOUND
        //         } // FXID NOT FOUND
        //         break; // FXID NOT FOUND
        // } // FXID NOT FOUND

        // if (newMovies != null) { // FXID NOT FOUND
        //     movieList.addAll(newMovies); // FXID NOT FOUND
        // } // FXID NOT FOUND

        // loadingIndicator.setVisible(false); // FXID NOT FOUND
        // if (newMovies != null && newMovies.isEmpty()) { // FXID NOT FOUND
        //     statusLabel.setText("–§–∏–ª—å–º—ã –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '" + selectedCategory + "' –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"); // FXID NOT FOUND
        // } else if (newMovies != null) { // FXID NOT FOUND
        //     statusLabel.setText("–ó–∞–≥—Ä—É–∂–µ–Ω–æ " + movieList.size() + " —Ñ–∏–ª—å–º–æ–≤"); // FXID NOT FOUND
        // } // FXID NOT FOUND
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ —Ñ–∏–ª—å–º–∞
    private void showMovieDetails(Movie movie) {
        // –°–æ–±–∏—Ä–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∏–ª—å–º–µ –ø–æ —á–∞—Å—Ç—è–º
        String details = "";
        details = details + "üé¨ " + movie.getTitle() + "\n\n";
        details = details + "üìÖ –ì–æ–¥: " + movie.getReleaseYear() + "\n";
        details = details + "‚≠ê –†–µ–π—Ç–∏–Ω–≥: " + String.format("%.1f", movie.getVoteAverage()) + "\n";
        details = details + "üî• –ü–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å: " + String.format("%.1f", movie.getPopularity()) + "\n";
        details = details + "üé≠ –ñ–∞–Ω—Ä—ã: " + movie.getGenres() + "\n";
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫—É—é –æ—Ü–µ–Ω–∫—É –µ—Å–ª–∏ –µ—Å—Ç—å
        if (currentUser != null && movie.getUserRating() != null) {
            UserRating userRating = movie.getUserRating();
            details = details + "üë§ –í–∞—à–∞ –æ—Ü–µ–Ω–∫–∞: " + userRating.getRating() + "/5 ‚≠ê";
            if (userRating.getReviewText() != null && !userRating.getReviewText().isEmpty()) {
                details = details + "\nüìù –í–∞—à –æ—Ç–∑—ã–≤: " + userRating.getReviewText();
            }
            details = details + "\n";
        }
        
        // –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ - –¥–æ–±–∞–≤–ª—è–µ–º –µ—ë
        if (movie.getPredictedRating() > 0) {
            details = details + "ü§ñ –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–Ω–∞—è –æ—Ü–µ–Ω–∫–∞: " + String.format("%.2f", movie.getPredictedRating()) + "\n";
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å —Ñ–∏–ª—å–º–∞
        if (movie.isWatched()) {
            details = details + "‚úÖ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ";
            if (movie.isRewatch()) {
                details = details + " | üîÑ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∫ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º—É –ø—Ä–æ—Å–º–æ—Ç—Ä—É";
            }
            details = details + "\n";
        }
        
        details = details + "\nüìñ –û–ø–∏—Å–∞–Ω–∏–µ:\n" + movie.getOverview();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç
        movieDetailsArea.setText(details);
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ—Å—Ç–µ—Ä —Ñ–∏–ª—å–º–∞
        loadMoviePoster(movie);
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
        updateFavoriteToggle(movie);
        lastSelectedMovie = movie;
    }

    private void updateFavoriteToggle(Movie movie) {
        if (currentUser == null || movie == null) {
            favoriteToggleButton.setSelected(false);
            favoriteToggleButton.setText("‚òÜ –í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ");
            favoriteToggleButton.setDisable(true);
            return;
        }
        boolean isFavorite = recommendationService.isMovieFavorite(currentUser.getId(), movie.getId());
        favoriteToggleButton.setSelected(isFavorite);
        favoriteToggleButton.setText(isFavorite ? "‚òÖ –í –∏–∑–±—Ä–∞–Ω–Ω–æ–º" : "‚òÜ –í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ");
        favoriteToggleButton.setDisable(false);
    }

    @FXML
    private void handleFavoriteToggle() {
        if (currentUser == null || lastSelectedMovie == null) return;
        boolean wantFavorite = favoriteToggleButton.isSelected();
        if (wantFavorite) {
            boolean added = recommendationService.addMovieToFavorites(currentUser.getId(), lastSelectedMovie.getId());
            if (added) {
                favoriteToggleButton.setText("‚òÖ –í –∏–∑–±—Ä–∞–Ω–Ω–æ–º");
                statusLabel.setText("–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ");
            } else {
                favoriteToggleButton.setSelected(false);
                statusLabel.setText("–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ");
            }
        } else {
            boolean removed = recommendationService.removeMovieFromFavorites(currentUser.getId(), lastSelectedMovie.getId());
            if (removed) {
                favoriteToggleButton.setText("‚òÜ –í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ");
                statusLabel.setText("–£–¥–∞–ª–µ–Ω–æ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ");
            } else {
                favoriteToggleButton.setSelected(true);
                statusLabel.setText("–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ");
            }
        }
    }
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ—Å—Ç–µ—Ä —Ñ–∏–ª—å–º–∞
    private void loadMoviePoster(Movie movie) {
        moviePosterView.setImage(null);
        String posterUrl = movie.getFullPosterUrl();
        if (posterUrl == null || posterUrl.isEmpty()) {
            return;
        }
        try {
            Image posterImage = new Image(posterUrl, true); // true = –∑–∞–≥—Ä—É–∂–∞—Ç—å –≤ —Ñ–æ–Ω–µ
            moviePosterView.setImage(posterImage);
        } catch (Exception e) {
            System.err.println("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ—Å—Ç–µ—Ä–∞: " + e.getMessage());
            moviePosterView.setImage(null);
        }
    }
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
    public void shutdown() {
        if (recommendationService != null) {
            recommendationService.shutdown();
        }
    }
    
    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—à–∏–±–æ–∫
    private void showError(String message) {
        Alert alert = new Alert(Alert.AlertType.ERROR);
        alert.setTitle("–û—à–∏–±–∫–∞");
        alert.setHeaderText(null);
        alert.setContentText(message);
        alert.showAndWait();
    }

    @FXML
    private void handleFavorites() {
        if (currentUser == null) {
            statusLabel.setText("–°–Ω–∞—á–∞–ª–∞ –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É");
            return;
        }
        try {
            // –ü–æ–ª—É—á–∞–µ–º –∏–∑–±—Ä–∞–Ω–Ω—ã–µ —Ñ–∏–ª—å–º—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            List<Movie> favorites = recommendationService.getFavoriteMovies(currentUser.getId());
            movieList.clear();
            movieList.addAll(favorites);
            statusLabel.setText("–ü–æ–∫–∞–∑–∞–Ω—ã –∏–∑–±—Ä–∞–Ω–Ω—ã–µ —Ñ–∏–ª—å–º—ã: " + favorites.size());
            movieDetailsArea.setText("–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–ª—å–º –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π.");
        } catch (Exception e) {
            statusLabel.setText("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ: " + e.getMessage());
        }
    }
}
