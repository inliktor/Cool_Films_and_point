package amaneko.ml_and_fx.controller;

import java.net.URL;
import java.util.ResourceBundle;

import amaneko.ml_and_fx.model.Movie;
import amaneko.ml_and_fx.model.User;
import amaneko.ml_and_fx.model.UserRating;
import amaneko.ml_and_fx.service.SimpleMovieRecommendationService;
import javafx.application.Platform;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.DialogPane;
import javafx.scene.control.Label;
import javafx.scene.control.Slider;
import javafx.scene.control.TextArea;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.HBox;
import javafx.stage.Stage;

/**
 * –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è –¥–∏–∞–ª–æ–≥–∞ –æ—Ü–µ–Ω–∫–∏ —Ñ–∏–ª—å–º–∞ —Å –∑–≤—ë–∑–¥–Ω—ã–º —Ä–µ–π—Ç–∏–Ω–≥–æ–º
 */
public class RatingDialogController implements Initializable {
    
    @FXML private Label movieTitleLabel;
    @FXML private Label movieInfoLabel;
    @FXML private HBox starRatingBox; // Required for FXML binding
    @FXML private Label star1, star2, star3, star4, star5;
    @FXML private Slider ratingSlider;
    @FXML private Label ratingValueLabel;
    @FXML private TextArea reviewTextArea;
    @FXML private Button saveButton; // Required for FXML binding
    @FXML private Button publishButton; // Required for FXML binding
    @FXML private Button cancelButton; // Required for FXML binding
    
    private Movie movie;
    private User currentUser;
    private UserRating userRating;
    private boolean saved = false;
    private Stage dialogStage;
    private SimpleMovieRecommendationService recommendationService;
    private int currentStarRating = 3;
    private Label[] stars;
    
    @Override
    public void initialize(URL url, ResourceBundle resourceBundle) {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤ –∑–≤—ë–∑–¥
        stars = new Label[]{star1, star2, star3, star4, star5};
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–ª–∞–π–¥–µ—Ä –æ—Ü–µ–Ω–∫–∏
        setupRatingSlider();
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∑–≤—ë–∑–¥–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥
        setupStarRating();
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        setStarRating(3);
        updateRatingDisplay();
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–π –æ–±–ª–∞—Å—Ç–∏ –æ—Ç–∑—ã–≤–∞
        setupReviewTextArea();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∫–Ω–æ–ø–æ–∫
        if (saveButton != null) {
            System.out.println("üíæ –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞");
        }
        if (publishButton != null) {
            System.out.println("üì¢ –ö–Ω–æ–ø–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞");
        }
    }
    
    /**
     * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç —Å–ª–∞–π–¥–µ—Ä –æ—Ü–µ–Ω–∫–∏
     */
    private void setupRatingSlider() {
        ratingSlider.setMin(1.0);
        ratingSlider.setMax(5.0);
        ratingSlider.setValue(3.0);
        ratingSlider.setShowTickLabels(true);
        ratingSlider.setShowTickMarks(true);
        ratingSlider.setMajorTickUnit(1.0);
        ratingSlider.setMinorTickCount(0);
        ratingSlider.setSnapToTicks(true);
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª—å —Å–ª–∞–π–¥–µ—Ä–∞
        ratingSlider.getStyleClass().add("rating-slider");
        
        // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å–ª–∞–π–¥–µ—Ä —Å–æ –∑–≤—ë–∑–¥–∞–º–∏
        ratingSlider.valueProperty().addListener((obs, oldVal, newVal) -> {
            int rating = (int) Math.round(newVal.doubleValue());
            if (rating != currentStarRating) {
                setStarRating(rating);
            }
        });
    }
    
    /**
     * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∑–≤—ë–∑–¥
     */
    private void setupStarRating() {
        for (int i = 0; i < stars.length; i++) {
            final int starIndex = i + 1;
            Label star = stars[i];
            
            // –ö–ª–∏–∫ –ø–æ –∑–≤–µ–∑–¥–µ
            star.setOnMouseClicked(event -> {
                setStarRating(starIndex);
                ratingSlider.setValue(starIndex);
            });
            
            // Hover —ç—Ñ—Ñ–µ–∫—Ç
            star.setOnMouseEntered(event -> {
                highlightStars(starIndex);
            });
            
            star.setOnMouseExited(event -> {
                highlightStars(currentStarRating);
            });
        }
    }
    
    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∑–≤–µ–∑–¥–µ (–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ FXML)
     */
    @FXML
    private void handleStarClick(MouseEvent event) {
        Label clickedStar = (Label) event.getSource();
        for (int i = 0; i < stars.length; i++) {
            if (stars[i] == clickedStar) {
                int rating = i + 1;
                setStarRating(rating);
                ratingSlider.setValue(rating);
                break;
            }
        }
    }
    
    /**
     * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ä–µ–π—Ç–∏–Ω–≥ –≤ –∑–≤—ë–∑–¥–∞—Ö
     */
    private void setStarRating(int rating) {
        currentStarRating = Math.max(1, Math.min(5, rating));
        updateStarDisplay();
        updateRatingDisplay();
        // –£–±–∏—Ä–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∞–º –Ω–∞–∂–º–µ—Ç "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å"
    }
    
    /**
     * –û–±–Ω–æ–≤–ª—è–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–≤—ë–∑–¥
     */
    private void updateStarDisplay() {
        highlightStars(currentStarRating);
    }
    
    /**
     * –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ—Ç –∑–≤—ë–∑–¥—ã –≤ —Å—Ç–∏–ª–µ Netflix
     */
    private void highlightStars(int rating) {
        for (int i = 0; i < stars.length; i++) {
            Label star = stars[i];
            
            // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å—Ç–∏–ª–∏ –∫—Ä–æ–º–µ –±–∞–∑–æ–≤–æ–≥–æ star-button
            star.getStyleClass().removeAll("filled");
            
            if (i < rating) {
                star.setText("‚òÖ");
                star.getStyleClass().add("filled");
            } else {
                star.setText("‚òÜ");
            }
        }
    }
    
    /**
     * –û–±–Ω–æ–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –æ—Ü–µ–Ω–∫–∏
     */
    private void updateRatingDisplay() {
        String ratingText = currentStarRating + " –∏–∑ 5 –∑–≤—ë–∑–¥";
        String emoji = getRatingEmoji(currentStarRating);
        ratingValueLabel.setText(emoji + " " + ratingText);
    }
    
    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —ç–º–æ–¥–∑–∏ –¥–ª—è –æ—Ü–µ–Ω–∫–∏ –≤ —Å—Ç–∏–ª–µ Netflix
     */
    private String getRatingEmoji(int rating) {
        return switch (rating) {
            case 1 -> "üëé"; // –ü–ª–æ—Ö–æ (–ø–∞–ª–µ—Ü –≤–Ω–∏–∑)
            case 2 -> "üòï"; // –ù–µ –æ—á–µ–Ω—å
            case 3 -> "üëå"; // –ù–æ—Ä–º–∞–ª—å–Ω–æ
            case 4 -> "üëç"; // –•–æ—Ä–æ—à–æ (–ø–∞–ª–µ—Ü –≤–≤–µ—Ä—Ö)
            case 5 -> "üî•"; // –û—Ç–ª–∏—á–Ω–æ (–æ–≥–æ–Ω—å)
            default -> "üëå";
        };
    }
    
    /**
     * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ–∏–ª—å–º –¥–ª—è –æ—Ü–µ–Ω–∫–∏
     */
    public void setMovie(Movie movie) {
        this.movie = movie;
        if (movie != null) {
            movieTitleLabel.setText(movie.getTitle());
            String info = movie.getReleaseYear() + " ‚Ä¢ " + movie.getGenres();
            movieInfoLabel.setText(info);
            
            // –ï—Å–ª–∏ —É —Ñ–∏–ª—å–º–∞ —É–∂–µ –µ—Å—Ç—å –æ—Ü–µ–Ω–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ—ë
            if (movie.hasUserRating()) {
                UserRating existing = movie.getUserRating();
                int rating = (int) Math.round(existing.getRating());
                setStarRating(rating);
                ratingSlider.setValue(rating);
                if (existing.getReviewText() != null) {
                    reviewTextArea.setText(existing.getReviewText());
                }
            }
        }
    }
    
    /**
     * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    public void setCurrentUser(User user) {
        this.currentUser = user;
    }
    
    /**
     * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç Stage –¥–∏–∞–ª–æ–≥–∞
     */
    public void setDialogStage(Stage stage) {
        this.dialogStage = stage;
        
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –¥–∏–∞–ª–æ–≥–∞
        if (stage != null) {
            stage.setMinWidth(600);
            stage.setMinHeight(550);
            stage.setWidth(600);
            stage.setHeight(550);
            stage.setResizable(false);
        }
    }
    
    /**
     * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–µ—Ä–≤–∏—Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
     */
    public void setRecommendationService(SimpleMovieRecommendationService service) {
        this.recommendationService = service;
    }
    
    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ—Ü–µ–Ω–∫–∏ (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ FXML)
     */
    @FXML
    private void handlePublish() {
        handleMovieAction(ActionType.PUBLISH_RATING);
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –æ—Ç–º–µ–Ω—ã (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ FXML)
     */
    @FXML
    private void handleCancel() {
        saved = false;
        closeDialog();
    }
    
    /**
     * –ó–∞–∫—Ä—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥
     */
    private void closeDialog() {
        if (dialogStage != null) {
            dialogStage.close();
        }
    }
    
    /**
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ –≤ —Å—Ç–∏–ª–µ Netflix
     */
    private void showSuccess(String message) {
        Alert alert = new Alert(Alert.AlertType.INFORMATION);
        alert.setTitle("–£—Å–ø–µ—Ö");
        alert.setHeaderText(null);
        alert.setContentText(message);
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π Netflix —Å—Ç–∏–ª—å –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ
        DialogPane dialogPane = alert.getDialogPane();
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–∞–∑–æ–≤—ã–µ —Å—Ç–∏–ª–∏
        dialogPane.setStyle("-fx-background-color: #141414;");
        
        // –°—Ç–∏–ª–∏–∑—É–µ–º –∫–Ω–æ–ø–∫–∏
        alert.getDialogPane().getButtonTypes().forEach(buttonType -> {
            Button button = (Button) alert.getDialogPane().lookupButton(buttonType);
            button.setStyle("-fx-background-color: #2ecc71; -fx-text-fill: white; -fx-font-weight: bold;");
        });
        
        // –°—Ç–∏–ª–∏–∑—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        Label contentLabel = (Label) dialogPane.lookup(".content.label");
        if (contentLabel != null) {
            contentLabel.setStyle("-fx-text-fill: white; -fx-font-size: 14px;");
        }
        
        alert.showAndWait();
    }
    
    /**
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É –≤ —Å—Ç–∏–ª–µ Netflix
     */
    private void showError(String message) {
        Alert alert = new Alert(Alert.AlertType.ERROR);
        alert.setTitle("–û—à–∏–±–∫–∞");
        alert.setHeaderText(null);
        alert.setContentText(message);
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π Netflix —Å—Ç–∏–ª—å –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ
        DialogPane dialogPane = alert.getDialogPane();
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–∞–∑–æ–≤—ã–µ —Å—Ç–∏–ª–∏
        dialogPane.setStyle("-fx-background-color: #141414;");
        
        // –°—Ç–∏–ª–∏–∑—É–µ–º –∫–Ω–æ–ø–∫–∏
        alert.getDialogPane().getButtonTypes().forEach(buttonType -> {
            Button button = (Button) alert.getDialogPane().lookupButton(buttonType);
            button.setStyle("-fx-background-color: #E50914; -fx-text-fill: white; -fx-font-weight: bold;");
        });
        
        // –°—Ç–∏–ª–∏–∑—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        Label contentLabel = (Label) dialogPane.lookup(".content.label");
        if (contentLabel != null) {
            contentLabel.setStyle("-fx-text-fill: white; -fx-font-size: 14px;");
        }
        
        alert.showAndWait();
    }
    
    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç true –µ—Å–ª–∏ –æ—Ü–µ–Ω–∫–∞ –±—ã–ª–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞
     */
    public boolean isSaved() {
        return saved;
    }
    
    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—É—é/–æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –æ—Ü–µ–Ω–∫—É
     */
    public UserRating getUserRating() {
        return userRating;
    }
    
    /**
     * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç —Å—Ç–∏–ª–∏ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–π –æ–±–ª–∞—Å—Ç–∏ –æ—Ç–∑—ã–≤–∞
     */
    private void setupReviewTextArea() {
        if (reviewTextArea != null) {
            // –ü—Ä–æ–≥—Ä–∞–º–º–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Ç–µ–∫—Å—Ç–∞
            reviewTextArea.setStyle(
                "-fx-background-color: #141414 !important;" +
                "-fx-text-fill: white !important;" +
                "-fx-prompt-text-fill: rgba(255, 255, 255, 0.5) !important;" +
                "-fx-highlight-fill: #E50914;" +
                "-fx-highlight-text-fill: white;" +
                "-fx-control-inner-background: #141414 !important;" + // –í–∞–∂–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
                "-fx-font-size: 14px;"
            );
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∏–ª—å –¥–ª—è –≤—Å–µ—Ö –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–π –æ–±–ª–∞—Å—Ç–∏
            if (reviewTextArea.lookup(".content") != null) {
                reviewTextArea.lookup(".content").setStyle("-fx-background-color: #141414 !important;");
            }
            if (reviewTextArea.lookup(".text") != null) {
                reviewTextArea.lookup(".text").setStyle("-fx-fill: white !important;");
            }
            if (reviewTextArea.lookup(".viewport") != null) {
                reviewTextArea.lookup(".viewport").setStyle("-fx-background-color: #141414 !important;");
            }
            
            // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—à–∞—Ç–µ–ª—å –¥–ª—è —Ç–µ–∫—Å—Ç–∞, —á—Ç–æ–±—ã –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
            reviewTextArea.textProperty().addListener((observable, oldValue, newValue) -> {
                System.out.println("‚úèÔ∏è –¢–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞ –æ–±–Ω–æ–≤–ª–µ–Ω: " + newValue);
                // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∏–ª–µ–π –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è, —á—Ç–æ–±—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç—å
                Platform.runLater(() -> {
                    reviewTextArea.setStyle(
                        "-fx-background-color: #141414 !important;" +
                        "-fx-text-fill: white !important;" +
                        "-fx-prompt-text-fill: rgba(255, 255, 255, 0.5) !important;" +
                        "-fx-control-inner-background: #141414 !important;" +
                        "-fx-font-size: 14px;"
                    );
                });
            });

            System.out.println("üé® –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–π –æ–±–ª–∞—Å—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã");
        } else {
            System.out.println("‚ö†Ô∏è –¢–µ–∫—Å—Ç–æ–≤–∞—è –æ–±–ª–∞—Å—Ç—å –æ—Ç–∑—ã–≤–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞");
        }
    }
    
    /**
     * Enum –¥–ª—è —Ç–∏–ø–æ–≤ –¥–µ–π—Å—Ç–≤–∏–π —Å —Ñ–∏–ª—å–º–æ–º
     */
    public enum ActionType {
        SAVE_RATING,     // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Ü–µ–Ω–∫—É
        PUBLISH_RATING,  // –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –æ—Ü–µ–Ω–∫—É
        WATCH_ONLY       // –û—Ç–º–µ—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ –∫–∞–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω–æ–µ
    }
    
    /**
     * –û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Å–µ—Ö –¥–µ–π—Å—Ç–≤–∏–π —Å —Ñ–∏–ª—å–º–æ–º
     * –£—Å—Ç—Ä–∞–Ω—è–µ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ –º–µ–∂–¥—É handleSave, handlePublish –∏ handleWatched
     */
    private void handleMovieAction(ActionType actionType) {
        System.out.println("üé¨ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ: " + actionType);
        
        if (movie == null || currentUser == null) {
            System.out.println("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö: movie=" + movie + ", user=" + currentUser);
            showError("–û—à–∏–±–∫–∞ –¥–∞–Ω–Ω—ã—Ö");
            return;
        }
        
        try {
            double rating = 0.0;
            String reviewText = null;
            boolean isPublish = false;
            String actionDescription = "";
            String successMessage = "";
            final int delayMs;
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –¥–µ–π—Å—Ç–≤–∏—è
            switch (actionType) {
                case SAVE_RATING -> {
                    rating = currentStarRating;
                    reviewText = reviewTextArea.getText().trim();
                    if (reviewText.isEmpty()) reviewText = null;
                    actionDescription = "—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ü–µ–Ω–∫–∏";
                    successMessage = getRatingEmoji(currentStarRating) + " –í–∞—à–∞ –æ—Ü–µ–Ω–∫–∞ " + currentStarRating + " –∏–∑ 5 –∑–≤—ë–∑–¥ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!";
                    delayMs = 1000;
                }
                case PUBLISH_RATING -> {
                    reviewText = reviewTextArea.getText().trim();
                    if (reviewText.isEmpty()) {
                        showError("–î–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤ –æ —Ñ–∏–ª—å–º–µ");
                        return;
                    }
                    rating = currentStarRating;
                    isPublish = true;
                    actionDescription = "–ø—É–±–ª–∏–∫–∞—Ü–∏—é –æ—Ü–µ–Ω–∫–∏";
                    successMessage = getRatingEmoji(currentStarRating) + " –í–∞—à–∞ –æ—Ü–µ–Ω–∫–∞ " + currentStarRating + " –∏–∑ 5 –∑–≤—ë–∑–¥ –∏ –æ—Ç–∑—ã–≤ —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã!\n\n–¢–µ–ø–µ—Ä—å –¥—Ä—É–≥–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–º–æ–≥—É—Ç –≤–∏–¥–µ—Ç—å –≤–∞—à—É —Ä–µ—Ü–µ–Ω–∑–∏—é.";
                    delayMs = 1500;
                }
                case WATCH_ONLY -> {
                    rating = 0.0; // 0.0 –æ–∑–Ω–∞—á–∞–µ—Ç "–±–µ–∑ –æ—Ü–µ–Ω–∫–∏"
                    reviewText = null;
                    actionDescription = "–æ—Ç–º–µ—Ç–∫—É –ø—Ä–æ—Å–º–æ—Ç—Ä–∞";
                    successMessage = "–§–∏–ª—å–º \"" + movie.getTitle() + "\" –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö.\n–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç —É–ª—É—á—à–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –≤–∞—Å.";
                    delayMs = 1000;
                }
                default -> throw new IllegalArgumentException("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –¥–µ–π—Å—Ç–≤–∏—è: " + actionType);
            }
            
            System.out.println("‚≠ê –†–µ–π—Ç–∏–Ω–≥: " + rating);
            System.out.println("üìù –û—Ç–∑—ã–≤: " + (reviewText != null ? reviewText : "–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"));
            System.out.println("üì¢ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ: " + isPublish);
            
            boolean success;
            
            if (actionType == ActionType.WATCH_ONLY) {
                // –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –±–µ–∑ –æ—Ü–µ–Ω–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥
                success = recommendationService.processMovieAction(
                    currentUser.getId(), 
                    movie.getId(), 
                    SimpleMovieRecommendationService.MovieAction.WATCH_ONLY, 
                    null, 
                    null
                );
            } else {
                // –î–ª—è –æ—Ü–µ–Ω–æ–∫ –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥
                SimpleMovieRecommendationService.MovieAction movieAction = 
                    isPublish ? SimpleMovieRecommendationService.MovieAction.RATE_AND_PUBLISH 
                              : SimpleMovieRecommendationService.MovieAction.RATE_ONLY;
                
                if (recommendationService != null) {
                    success = recommendationService.processMovieAction(
                        currentUser.getId(), 
                        movie.getId(), 
                        movieAction, 
                        rating, 
                        reviewText
                    );
                    
                    // –°–æ–∑–¥–∞–µ–º UserRating –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
                    if (success) {
                        userRating = new UserRating(currentUser.getId(), movie.getId(), rating, reviewText);
                        userRating.setPublished(isPublish);
                        System.out.println("üéØ –°–æ–∑–¥–∞–Ω –æ–±—ä–µ–∫—Ç UserRating: " + userRating);
                    }
                } else {
                    showError("–°–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω");
                    return;
                }
            }
            
            if (success) {
                System.out.println("‚úÖ " + actionDescription + " –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ");
                showSuccess(successMessage);
                
                // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–∏–ª—å–º–∞
                if (actionType != ActionType.WATCH_ONLY) {
                    movie.setUserRating(userRating);
                }
                movie.setWatched(true);
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
                if (rating >= 4.0) {
                    movie.setRewatch(true);
                    System.out.println("üîÑ –§–∏–ª—å–º —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞");
                }
                
                saved = true;
                System.out.println("üéâ –ü—Ä–æ—Ü–µ—Å—Å " + actionDescription + " –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ");
                
                // –ó–∞–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
                new Thread(() -> {
                    try {
                        Thread.sleep(delayMs);
                        javafx.application.Platform.runLater(this::closeDialog);
                    } catch (InterruptedException e) {
                        javafx.application.Platform.runLater(this::closeDialog);
                    }
                }).start();
                
            } else {
                System.out.println("‚ùå –û—à–∏–±–∫–∞ " + actionDescription);
                showError("–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å " + actionDescription);
            }
            
        } catch (Exception e) {
            System.err.println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–µ–π—Å—Ç–≤–∏—è: " + e.getMessage());
            showError("–û—à–∏–±–∫–∞: " + e.getMessage());
        }
    }
}
