package amaneko.ml_and_fx.controller;

import amaneko.ml_and_fx.model.*;
import amaneko.ml_and_fx.service.*;
import amaneko.ml_and_fx.ml.*;

import java.net.URL;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.ResourceBundle;

import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.CheckBox;
import javafx.scene.control.DialogPane;
import javafx.scene.control.Label;
import javafx.scene.control.ScrollPane;
import javafx.scene.control.Slider;
import javafx.scene.control.ToggleButton;
import javafx.scene.layout.FlowPane;

/**
 * –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è —ç–∫—Ä–∞–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
public class PreferencesController implements Initializable {
    
    @FXML private FlowPane genreFlowPane;
    @FXML private ScrollPane genreScrollPane;
    @FXML private Slider minRatingSlider;
    @FXML private Label minRatingLabel;
    @FXML private CheckBox includeWatchedCheckBox;
    @FXML private Button saveButton;
    @FXML private Button cancelButton;
    @FXML private Label statusLabel;
    
    private SimpleMovieRecommendationService recommendationService;
    private List<Genre> allGenres = new ArrayList<>();
    private Map<String, ToggleButton> genreButtons = new HashMap<>();
    private UserPreferences userPreferences;
    private User currentUser;
    private MovieRecommendationApp app;
    
    @Override
    public void initialize(URL url, ResourceBundle resourceBundle) {
        // –°–µ—Ä–≤–∏—Å –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ setApp()
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–ª–∞–π–¥–µ—Ä —Ä–µ–π—Ç–∏–Ω–≥–∞
        minRatingSlider.setMin(1.0);
        minRatingSlider.setMax(10.0);
        minRatingSlider.setValue(6.0);
        minRatingSlider.setShowTickLabels(true);
        minRatingSlider.setShowTickMarks(true);
        minRatingSlider.setMajorTickUnit(1.0);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–ª–∞–π–¥–µ—Ä–∞
        minRatingSlider.valueProperty().addListener((obs, oldVal, newVal) -> {
            minRatingLabel.setText("‚≠ê –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥: " + String.format("%.1f", newVal.doubleValue()));
        });
        minRatingLabel.setText("‚≠ê –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥: 6.0");
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        includeWatchedCheckBox.setSelected(true);
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º FlowPane –¥–ª—è –∂–∞–Ω—Ä–æ–≤
        genreFlowPane.setHgap(10);
        genreFlowPane.setVgap(10);
        
        // CSS –∫–ª–∞—Å—Å—ã –ø—Ä–∏–º–µ–Ω—è—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ FXML
        // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ —Å—Ç–∏–ª–∏ –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è
        genreScrollPane.getStyleClass().add("genre-scroll-pane");
        genreFlowPane.getStyleClass().add("genre-flow-pane");
    }
    
    /**
     * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∂–∞–Ω—Ä—ã –∏ —Å–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫–∏-–ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–∏
     */
    private void loadGenres() {
        try {
            allGenres = recommendationService.getAllGenres();
            genreFlowPane.getChildren().clear();
            genreButtons.clear();
            
            for (Genre genre : allGenres) {
                ToggleButton genreButton = new ToggleButton(genre.getName());
                
                // –ü—Ä–∏–º–µ–Ω—è–µ–º CSS –∫–ª–∞—Å—Å –≤–º–µ—Å—Ç–æ –ø—Ä—è–º–æ–≥–æ —Å—Ç–∏–ª–∏–∑–æ–≤–∞–Ω–∏—è
                genreButton.getStyleClass().add("genre-toggle-button");
                
                genreButton.setUserData(genre);
                genreButtons.put(genre.getName(), genreButton);
                genreFlowPane.getChildren().add(genreButton);
                
                // –ù–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞—Ö —Å—Ç–∏–ª–µ–π - CSS —Å–¥–µ–ª–∞–µ—Ç –≤—Å—ë —Å–∞–º
            }
            
            statusLabel.setText("–ó–∞–≥—Ä—É–∂–µ–Ω–æ " + allGenres.size() + " –∂–∞–Ω—Ä–æ–≤");
        } catch (Exception e) {
            statusLabel.setText("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∂–∞–Ω—Ä–æ–≤: " + e.getMessage());
            e.printStackTrace(); // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
        }
    }
    
    /**
     * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–≥—Ä—É–∂–∞–µ—Ç –µ–≥–æ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è
     */
    public void setCurrentUser(User user) {
        this.currentUser = user;
        if (user != null) {
            System.out.println("üë§ –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: " + user.getUsername());
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –∏–∑ –ë–î
            userPreferences = recommendationService.getUserPreferences(user.getId());
            if (userPreferences == null) {
                System.out.println("üìù –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
                userPreferences = new UserPreferences(user.getId());
            } else {
                System.out.println("‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω—ã –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –∏–∑ –∫—ç—à–∞/–±–∞–∑—ã");
            }
            
            updateUI();
        }
    }
    
    /**
     * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –≥–ª–∞–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
     */
    public void setApp(MovieRecommendationApp app) {
        this.app = app;
        // –ü–æ–ª—É—á–∞–µ–º –æ–±—â–∏–π —Å–µ—Ä–≤–∏—Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
        this.recommendationService = app.getRecommendationService();
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∂–∞–Ω—Ä—ã —Ç–µ–ø–µ—Ä—å, –∫–æ–≥–¥–∞ —Å–µ—Ä–≤–∏—Å –¥–æ—Å—Ç—É–ø–µ–Ω
        loadGenres();
    }
    
    /**
     * –û–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ç–µ–∫—É—â–∏–º–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º–∏
     */
    private void updateUI() {
        if (userPreferences != null) {
            System.out.println("üîÑ –û–±–Ω–æ–≤–ª—è–µ–º UI —Å –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –∂–∞–Ω—Ä—ã
            for (Genre preferredGenre : userPreferences.getPreferredGenres()) {
                String genreName = preferredGenre.getName();
                if (genreButtons.containsKey(genreName)) {
                    genreButtons.get(genreName).setSelected(true);
                    System.out.println("‚úÖ –ñ–∞–Ω—Ä " + genreName + " –æ—Ç–º–µ—á–µ–Ω –∫–∞–∫ –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—ã–π");
                }
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ª–∞–π–¥–µ—Ä –∏ —á–µ–∫–±–æ–∫—Å
            minRatingSlider.setValue(userPreferences.getMinRating());
            includeWatchedCheckBox.setSelected(userPreferences.isIncludeWatchedMovies());
            
            System.out.println("üìä UI –æ–±–Ω–æ–≤–ª–µ–Ω: –º–∏–Ω–†–µ–π—Ç–∏–Ω–≥=" + userPreferences.getMinRating() + 
                             ", –≤–∫–ª—é—á–∞—Ç—å–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ=" + userPreferences.isIncludeWatchedMovies());
        }
    }
    
    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
     */
    @FXML
    private void handleSave() {
        try {
            System.out.println("üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...");
            
            // –°–æ–±–∏—Ä–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –∂–∞–Ω—Ä—ã
            userPreferences.getPreferredGenres().clear();
            for (ToggleButton button : genreButtons.values()) {
                if (button.isSelected()) {
                    Genre genre = (Genre) button.getUserData();
                    userPreferences.addPreferredGenre(genre);
                    System.out.println("‚úÖ –í—ã–±—Ä–∞–Ω –∂–∞–Ω—Ä: " + genre.getName());
                }
            }
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            userPreferences.setMinRating(minRatingSlider.getValue());
            userPreferences.setIncludeWatchedMovies(includeWatchedCheckBox.isSelected());
            
            System.out.println("‚≠ê –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥: " + userPreferences.getMinRating());
            System.out.println("üëÅÔ∏è –í–∫–ª—é—á–∞—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ: " + userPreferences.isIncludeWatchedMovies());
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å
            recommendationService.saveUserPreferences(userPreferences);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
            statusLabel.setText("‚úÖ –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!");
            
            // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω—ã–π alert —Å Netflix —Å—Ç–∏–ª–µ–º
            Alert alert = new Alert(Alert.AlertType.INFORMATION);
            alert.setTitle("–ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã");
            alert.setHeaderText(null);
            
            // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º alert —Å —Ç–µ–º–Ω—ã–º —Å—Ç–∏–ª–µ–º
            DialogPane dialogPane = alert.getDialogPane();
            dialogPane.getStylesheets().add(getClass().getResource("/amaneko/ml_and_fx/netflix-styles.css").toExternalForm());
            dialogPane.getStyleClass().add("netflix-alert");
            
            String message = "–í–∞—à–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:\n\n";
            message += "‚Ä¢ –í—ã–±—Ä–∞–Ω–æ –∂–∞–Ω—Ä–æ–≤: " + userPreferences.getPreferredGenres().size() + "\n";
            message += "‚Ä¢ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥: " + String.format("%.1f", userPreferences.getMinRating()) + "\n";
            message += "‚Ä¢ –í–∫–ª—é—á–∞—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ: " + (userPreferences.isIncludeWatchedMovies() ? "–î–∞" : "–ù–µ—Ç");
            
            alert.setContentText(message);
            alert.showAndWait();
            
        } catch (Exception e) {
            statusLabel.setText("‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: " + e.getMessage());
            e.printStackTrace(); // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
        }
    }
    
    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –æ—Ç–º–µ–Ω—ã
     */
    @FXML
    private void handleCancel() {
        try {
            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
            if (app != null) {
                app.showMainScreen();
            }
        } catch (Exception e) {
            statusLabel.setText("‚ùå –û—à–∏–±–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞: " + e.getMessage());
        }
    }
    
    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–∏–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    public UserPreferences getUserPreferences() {
        return userPreferences;
    }
    
    /**
     * –ó–∞–∫—Ä—ã—Ç–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤
     */
    public void shutdown() {
        if (recommendationService != null) {
            recommendationService.shutdown();
        }
    }
}
