Unit-тесты — тестируют отдельные компоненты (классы, методы, функции) в изоляции. Проверяют корректность логики на простых и типовых данных. Не зависят от внешних сервисов или БД. Best practices: покрывать все ветвления, использовать mock-объекты для зависимостей.

Smoke-тесты — минимальный набор проверок, подтверждающий базовую работоспособность приложения или его частей. Быстро выявляют критические ошибки и проблемы инициализации. Запускаются после сборки или деплоя.

Edge-case тесты — проверяют поведение системы на граничных, необычных или экстремальных входных данных (например, пустые строки, null, максимальные значения, невалидные форматы). Помогают выявить ошибки, которые не проявляются на типовых данных.

Security-тесты — направлены на проверку безопасности: отсутствие утечек паролей, защита от SQL-инъекций, XSS, CSRF, корректная обработка прав доступа, валидация пользовательских данных. Best practices: использовать тестовые данные, имитирующие атаки.

---

Назначение и примеры тестов в проекте:

Unit-тесты (например, UserTest, MovieTest, UserRatingTest, UserPreferencesTest, GenreTest):
- Проверяют корректность работы моделей: создание, сравнение, геттеры/сеттеры, equals/hashCode, edge-cases (null, пустые значения).
- Для сервисов (SimpleMovieRecommendationServiceTest, SimpleMLServiceTest, AuthServiceTest): тестируют бизнес-логику, обработку входных данных, корректность рекомендаций, cold-start fallback, валидацию логинов.
- Пример: UserTest проверяет создание пользователя, сравнение пользователей, работу equals/hashCode.

Smoke-тесты (например, ControllersSmokeTest, SimpleMovieRecommendationServiceSmokeTest):
- Проверяют, что основные контроллеры и сервисы запускаются без ошибок, корректно инициализируются, обрабатывают базовые сценарии.
- Пример: ControllersSmokeTest — smoke-проверка всех контроллеров (MainController, PreferencesController и др.) на отсутствие критических ошибок при инициализации.

Edge-case тесты:
- Проверяют работу моделей и сервисов на граничных и невалидных данных (например, пустые строки, null, несуществующие id, максимальные значения).
- Пример: UserPreferencesTest — тестирует поведение при пустых предпочтениях, SecurityTest — проверяет валидацию логинов и уникальность рекомендаций.

Security-тесты (например, SecurityTest):
- Проверяют отсутствие утечек паролей, корректную обработку логинов, невозможность получить открытый пароль, защиту от дублирования рекомендаций.
- Пример: SecurityTest — тестирует, что пароли не возвращаются в открытом виде, логины валидируются, рекомендации уникальны.

---

Для чего нужны разные виды тестов:
- Unit — быстро выявляют ошибки в логике отдельных компонентов.
- Smoke — гарантируют базовую работоспособность приложения после изменений.
- Edge — защищают от сбоев на необычных/граничных данных.
- Security — предотвращают уязвимости и утечки.

